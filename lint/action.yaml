name: node Lint
description: GitHub Action that lints a Node based repository
inputs:
  checkout-repo:
    required: false
    description: Perform checkout as first step of action
    default: "true"
  lint-script:
    required: false
    description: Custom script to run, should be defined in package.json.
    default: "lint"
  github-token:
    required: true
    description: GitHub token that can checkout the repository. e.g. 'secrets.GITHUB_TOKEN'
    default: ${{ github.token }}
  npm-auth-token:
    required: false
    description: The Node Package Manager (npm) authentication token. This token is used to authenticate against a private NPM registry configured via a .npmrc file.
  npm-token:
    required: false
    description: The Node Package Manager (npm) authentication token. This token is used to authenticate against the NPM registry.
  internal-dependency-prefixes:
    required: false
    description: Prefixes used to match internal dependencies and disallow beta versions. Can take comma-separated values e.g. '@turo,@example'.
    default: ""
  s3-bucket-name:
    required: false
    description: S3 bucket name to cache node_modules to speed up dependency installation.
  s3-bucket-region:
    required: false
    description: S3 bucket region to cache node_modules to speed up dependency installation.

runs:
  using: composite
  steps:
    - name: Install dependencies
      id: install_dependencies
      uses: open-turo/actions-node/install-dependencies@v6
      with:
        checkout-repo: ${{ inputs.checkout-repo }}
        github-token: ${{ inputs.github-token }}
        npm-auth-token: ${{ inputs.npm-auth-token }}
        npm-token: ${{ inputs.npm-token }}
        s3-bucket-name: ${{ inputs.s3-bucket-name }}
        s3-bucket-region: ${{ inputs.s3-bucket-region }}
    - name: Run lint script (npm)
      if: steps.install_dependencies.outputs.package-manager == 'npm'
      shell: bash
      run: npm run ${{ inputs.lint-script }}
      env:
        NPM_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
        NPM_TOKEN: ${{ inputs.npm-token }}
    - name: Run lint script (yarn)
      if: steps.install_dependencies.outputs.package-manager == 'yarn'
      shell: bash
      run: yarn ${{ inputs.lint-script }}
      env:
        NPM_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
        NPM_TOKEN: ${{ inputs.npm-token }}
    - name: Check for .pre-commit-config file
      id: check_pre_commit_config
      uses: andstor/file-existence-action@v3
      with:
        files: .pre-commit-config.*
    - name: Pre-commit
      if: steps.check_pre_commit_config.outputs.files_exists == 'true'
      uses: open-turo/action-pre-commit@v2
    - if: ${{ inputs.internal-dependency-prefixes != '' }}
      name: Create Beta Release Check Script
      run: |
        cat << 'EOF' > "${{ runner.temp }}/beta-check.sh"
        set -e
        delimited_prefixes=$(sed 's/ *, */|/g' <<< $1)
        if egrep "($delimited_prefixes).*\-(beta|pr)\-" package.json; then
          echo "ERROR: should not consume a beta version of an internal dependency. Make sure to revert/update to use a proper release."
          exit 1
        fi
        EOF
        chmod +x ${{ runner.temp }}/beta-check.sh
      shell: bash
    - if: ${{ inputs.internal-dependency-prefixes != '' }}
      name: Run Beta Release Check
      run: bash ${{ runner.temp }}/beta-check.sh ${{ inputs.internal-dependency-prefixes }}
      shell: bash
    - name: Check release notes on pull_request
      if: github.event_name == 'pull_request'
      uses: open-turo/actions-release/lint-release-notes@v5
      env:
        NPM_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
        NPM_TOKEN: ${{ inputs.npm-token }}
