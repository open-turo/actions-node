name: node Lint
description: GitHub Action that lints a Node based repository
inputs:
  checkout-repo:
    required: false
    description: Perform checkout as first step of action
    default: "true"
  eslint-flags:
    required: false
    description: Flags and args of eslint command
  fail-on-error:
    required: false
    description: |
      Exit code for reviewdog when errors are found [true, false]
      Default is `false`.
    default: "false"
  github-token:
    required: true
    description: GitHub token that can checkout the repository. e.g. 'secrets.GITHUB_TOKEN'
    default: ${{ github.token }}
  level:
    required: false
    description: |
      The output status behavior we want for the action [error, warning, info]
      Default is `error`
    default: "error"
  npm-auth-token:
    required: false
    description: The Node Package Manager (npm) authentication token. This token is used to authenticate against a private NPM registry configured via a .npmrc file.
  npm-token:
    required: false
    description: The Node Package Manager (npm) authentication token. This token is used to authenticate against the NPM registry.
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      if: inputs.checkout-repo
      with:
        fetch-depth: 0
    - name: Setup tools
      uses: open-turo/action-setup-tools@v1
    - name: Check for yarn.lock
      id: check_yarn_lock
      uses: andstor/file-existence-action@v2
      with:
        files: yarn.lock
    - name: Install dependencies (yarn)
      if: steps.check_yarn_lock.outputs.files_exists == 'true'
      shell: bash
      run: yarn --pure-lockfile
      env:
        NPM_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
    - name: Install dependencies (npm)
      if: steps.check_yarn_lock.outputs.files_exists == 'false'
      shell: bash
      run: npm ci
      env:
        NPM_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
    - name: Eslint
      uses: reviewdog/action-eslint@v1
      with:
        github_token: ${{ inputs.github-token }}
        level: ${{ inputs.level }}
        fail_on_error: ${{ inputs.fail-on-error }}
        eslint_flags: ${{ inputs.eslint-flags }}
        reporter: github-pr-review
    - name: Pre-commit
      uses: open-turo/action-pre-commit@v1
    - name: Beta Release Check
      run: bash ./lint/scripts/beta-check.sh
